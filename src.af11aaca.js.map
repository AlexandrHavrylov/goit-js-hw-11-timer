{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","onTick","targetDate","selector","changeTime","setInterval","curentTime","Date","timerComponents","getTimerComponents","markUp","getMarkUp","timer","updateTimerField","timer2","pad","value","String","padStart","id","curentTimer","document","querySelector","days","hours","mins","secs","refs","time","Math","floor","textContent"],"mappings":";AACA,MAAMA,EACLC,aAAY,OAACC,EAAD,WAASC,EAAT,SAAqBC,IAC7BF,KAAAA,OAASA,EACTC,KAAAA,WAAaA,EACbC,KAAAA,SAAWA,EAGhBC,aAEAC,YAAY,KACNC,MAAAA,EAAa,IAAIC,KAEjBC,EAAkBC,EADX,KAAKP,WAAaI,GAEzBI,EAASC,KAAa,KAAKR,YAE5BF,KAAAA,OAAOO,EAAiBE,IAC1B,MAKH,MAAME,EAAQ,IAAIb,EAAe,CAC/BI,SAAU,WACVD,WAAa,IAAIK,KAAK,gBACtBN,OAAQY,IAGVD,EAAMR,aAEN,MAAMU,EAAS,IAAIf,EAAe,CAChCI,SAAU,WACVD,WAAa,IAAIK,KAAK,uBACtBN,OAAQY,IAWV,SAASE,EAAIC,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnC,SAASP,EAAUQ,GAEXC,MAAAA,EAAcC,SAASC,iBAAiBH,KAExCI,EAAQH,EAAYE,cAAc,wBAClCE,EAASJ,EAAYE,cAAc,yBACnCG,EAAQL,EAAYE,cAAc,wBAClCI,EAAON,EAAYE,cAAc,wBAEhCK,OAAAA,KAAO,CACZJ,KAAAA,EACAC,MAAAA,EACAC,KAAAA,EACAC,KAAAA,GAMJ,SAASjB,EAAmBmB,GAMrB,MAAA,CAACL,KALMR,EAAIc,KAAKC,MAAMF,EAAQ,QAKvBJ,MAJCT,EAAIc,KAAKC,MAAOF,EAAQ,MAAyB,OAI3CH,KAHRV,EAAKc,KAAKC,MAAOF,EAAQ,KAAoB,MAG/BF,KAFbX,EAAIc,KAAKC,MAAOF,EAAQ,IAAc,OAKpD,SAASf,GAAiB,KAAEU,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,IAC7CC,KAAKJ,KAAKQ,eAAkBR,IAC5BI,KAAKH,MAAMO,eAAkBP,IAC7BG,KAAKF,KAAKM,eAAiBN,IAC3BE,KAAKD,KAAKK,eAAiBL,IA5C7BZ,EAAOV","file":"src.af11aaca.js","sourceRoot":"../src","sourcesContent":["\nclass CountdownTimer{\n constructor({onTick, targetDate, selector}) {\nthis.onTick = onTick\nthis.targetDate = targetDate\nthis.selector = selector\n  }\n  \nchangeTime() {\n  \nsetInterval(() => {\nconst curentTime = new Date();\nconst time = this.targetDate - curentTime\nconst timerComponents = getTimerComponents(time)\nconst markUp = getMarkUp(`${this.selector}`)\n  \nthis.onTick(timerComponents, markUp)\n },1000) \n}\n \n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate : new Date('Jul 07, 2021'),\n  onTick: updateTimerField\n});\n\ntimer.changeTime()\n\nconst timer2 = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate : new Date('Jul 07, 2022, 15:30'),\n  onTick: updateTimerField\n});\n\ntimer2.changeTime()\n\n\n\n\n\n\n\nfunction pad(value) {\n  return String(value).padStart(2, \"0\")\n}\n\nfunction getMarkUp(id) {\n  \n  const curentTimer = document.querySelector(`${id}`)\n\n  const days =  curentTimer.querySelector(' [data-value=\"days\"]')\n  const hours =  curentTimer.querySelector(' [data-value=\"hours\"]')\n  const mins =  curentTimer.querySelector(' [data-value=\"mins\"]')\n  const secs = curentTimer.querySelector(' [data-value=\"secs\"]')\n  \n  return refs = {\n    days,\n    hours,\n    mins,\n    secs\n  }\n}\n\n\n\nfunction getTimerComponents(time) {\nconst days =  pad(Math.floor(time / (1000 * 60 * 60 * 24)));\nconst hours =  pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\nconst mins = pad( Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\nconst secs =  pad(Math.floor((time % (1000 * 60)) / 1000));    \n    \nreturn {days, hours, mins, secs}\n};\n\nfunction updateTimerField({ days, hours, mins, secs }) {\n  refs.days.textContent = `${ days }`\n  refs.hours.textContent = `${ hours }`\n  refs.mins.textContent = `${mins}`\n  refs.secs.textContent = `${secs}`  \n}\n"]}